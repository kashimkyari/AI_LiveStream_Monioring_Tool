name: Deploy to EKS

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2
      
      # Configure AWS credentials from GitHub Secrets
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      # Build and push backend Docker image to ECR
      - name: Build backend Docker image
        run: |
          docker build -t stream-monitor-backend:latest ./backend
          docker tag stream-monitor-backend:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/stream-monitor-backend:latest
      - name: Push backend Docker image
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/stream-monitor-backend:latest
      
      # Build and push frontend Docker image to ECR
      - name: Build frontend Docker image
        run: |
          docker build -t stream-monitor-frontend:latest ./frontend
          docker tag stream-monitor-frontend:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/stream-monitor-frontend:latest
      - name: Push frontend Docker image
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/stream-monitor-frontend:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Configure AWS credentials again for deployment
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Update kubeconfig to interact with your EKS cluster
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region us-east-1 --name stream-monitor

      # Deploy the Kubernetes manifests to EKS using an inline heredoc
      - name: Deploy to EKS
        run: |
          cat <<'EOF' | kubectl apply -f -
          # ---------------- Backend Deployment & Service ----------------
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: stream-monitor-backend
            labels:
              app: stream-monitor-backend
          spec:
            replicas: 2
            selector:
              matchLabels:
                app: stream-monitor-backend
            template:
              metadata:
                labels:
                  app: stream-monitor-backend
              spec:
                containers:
                - name: backend
                  image: 038462756156.dkr.ecr.us-east-1.amazonaws.com/stream-monitor-backend:latest
                  ports:
                  - containerPort: 5000
                  env:
                  - name: DB_HOST
                    value: "stream-monitor-db"
                  - name: DB_PORT
                    value: "5432"
                  - name: DB_USER
                    value: "postgres"
                  - name: DB_PASSWORD
                    value: "password"
                  - name: NEW_DB_NAME
                    value: "stream_monitor"
                  - name: TELEGRAM_TOKEN
                    value: "8175749575:AAGWrWMrqzQkDP8bkKe3gafC42r_Ridr0gY"
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: stream-monitor-backend
          spec:
            selector:
              app: stream-monitor-backend
            ports:
            - protocol: TCP
              port: 5000
              targetPort: 5000
          ---
          # ---------------- Frontend Deployment & Service ----------------
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: stream-monitor-frontend
            labels:
              app: stream-monitor-frontend
          spec:
            replicas: 2
            selector:
              matchLabels:
                app: stream-monitor-frontend
            template:
              metadata:
                labels:
                  app: stream-monitor-frontend
              spec:
                containers:
                - name: frontend
                  image: 038462756156.dkr.ecr.us-east-1.amazonaws.com/stream-monitor-frontend:latest
                  ports:
                  - containerPort: 80
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: stream-monitor-frontend
            # EIP annotation removed to allow dynamic IP assignment by AWS
          spec:
            type: LoadBalancer
            selector:
              app: stream-monitor-frontend
            ports:
            - protocol: TCP
              port: 80
              targetPort: 80
          ---
          # ---------------- Database (PostgreSQL) Deployment, PVC, and Service ----------------
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: stream-monitor-db
            labels:
              app: stream-monitor-db
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: stream-monitor-db
            template:
              metadata:
                labels:
                  app: stream-monitor-db
              spec:
                containers:
                - name: postgres
                  image: postgres:13
                  ports:
                  - containerPort: 5432
                  env:
                  - name: POSTGRES_USER
                    value: "postgres"
                  - name: POSTGRES_PASSWORD
                    value: "password"
                  - name: POSTGRES_DB
                    value: "stream_monitor"
                  volumeMounts:
                  - name: postgres-data
                    mountPath: /var/lib/postgresql/data
                volumes:
                - name: postgres-data
                  persistentVolumeClaim:
                    claimName: postgres-pvc
          ---
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: postgres-pvc
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 5Gi
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: stream-monitor-db
          spec:
            selector:
              app: stream-monitor-db
            ports:
            - protocol: TCP
              port: 5432
              targetPort: 5432
          EOF

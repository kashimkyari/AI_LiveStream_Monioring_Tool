name: Build and Push to ECR

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Build and push the Python backend image
      - name: Build and Push Backend Image
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          ECR_REPOSITORY_BACKEND: ${{ secrets.ECR_REPOSITORY_BACKEND }}
        run: |
          echo "ECR_REPOSITORY_BACKEND is: '$ECR_REPOSITORY_BACKEND'"
          if [ -z "$ECR_REPOSITORY_BACKEND" ]; then
            echo "Error: ECR_REPOSITORY_BACKEND is empty!"
            exit 1
          fi
          docker build -t "$ECR_REPOSITORY_BACKEND:latest" -f backend/Dockerfile backend
          docker tag "$ECR_REPOSITORY_BACKEND:latest" "$ECR_REGISTRY/$ECR_REPOSITORY_BACKEND:latest"
          aws ecr describe-repositories --repository-names "$ECR_REPOSITORY_BACKEND" || aws ecr create-repository --repository-name "$ECR_REPOSITORY_BACKEND"
          docker push "$ECR_REGISTRY/$ECR_REPOSITORY_BACKEND:latest"

      # Build and push the React frontend image
      - name: Build and Push Frontend Image
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          ECR_REPOSITORY_FRONTEND: ${{ secrets.ECR_REPOSITORY_FRONTEND }}
        run: |
          echo "ECR_REPOSITORY_FRONTEND is: '$ECR_REPOSITORY_FRONTEND'"
          if [ -z "$ECR_REPOSITORY_FRONTEND" ]; then
            echo "Error: ECR_REPOSITORY_FRONTEND is empty!"
            exit 1
          fi
          docker build -t "$ECR_REPOSITORY_FRONTEND:latest" -f frontend/Dockerfile frontend
          docker tag "$ECR_REPOSITORY_FRONTEND:latest" "$ECR_REGISTRY/$ECR_REPOSITORY_FRONTEND:latest"
          aws ecr describe-repositories --repository-names "$ECR_REPOSITORY_FRONTEND" || aws ecr create-repository --repository-name "$ECR_REPOSITORY_FRONTEND"
          docker push "$ECR_REGISTRY/$ECR_REPOSITORY_FRONTEND:latest"

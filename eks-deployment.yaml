# ---------------------------------------
# Python Backend Deployment
# ---------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-backend-deployment
  namespace: default
  labels:
    app: ai-streamer-backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ai-streamer-backend
  template:
    metadata:
      labels:
        app: ai-streamer-backend
    spec:
      containers:
      - name: python-backend
        image: 038462756156.dkr.ecr.us-east-1.amazonaws.com/ai-streamer-backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
        resources:
          requests:
            cpu: "500m"
            memory: "4Gi"
          limits:
            cpu: "1"
            memory: "8Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 5
---
# Python Backend Service (Internal)
apiVersion: v1
kind: Service
metadata:
  name: python-backend-service
  namespace: default
  labels:
    app: ai-streamer-backend
spec:
  type: ClusterIP
  ports:
  - port: 5000
    targetPort: 5000
    protocol: TCP
  selector:
    app: ai-streamer-backend
---
# ---------------------------------------
# React Frontend Deployment
# ---------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: react-frontend-deployment
  namespace: default
  labels:
    app: ai-streamer-frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ai-streamer-frontend
  template:
    metadata:
      labels:
        app: ai-streamer-frontend
    spec:
      containers:
      - name: react-frontend
        image: 038462756156.dkr.ecr.us-east-1.amazonaws.com/ai-streamer-frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        resources:
          requests:
            cpu: "250m"
            memory: "1Gi"
          limits:
            cpu: "500m"
            memory: "2Gi"
---
# React Frontend Service (Public with Static Elastic IP)
apiVersion: v1
kind: Service
metadata:
  name: react-frontend-service
  namespace: default
  labels:
    app: ai-streamer-frontend
  annotations:
    # Use an NLB so you can assign a static Elastic IP
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    # Replace with your actual Elastic IP allocation ID
    service.beta.kubernetes.io/aws-load-balancer-eip-allocations: "eipalloc-0195006ff85a2aa7b"
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80          # Externally accessible port for the React app
    targetPort: 3000  # Container port for the React app
    protocol: TCP
  selector:
    app: ai-streamer-frontend

# ---------------------------------------
# Deployment: Robust Application Deployment
# ---------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-streamer-deployment      # (Matches EKS_DEPLOYMENT in your workflows)
  namespace: default                # (Or change to your custom namespace)
  labels:
    app: ai-streamer
spec:
  replicas: 2                       # Adjust replicas as needed
  selector:
    matchLabels:
      app: ai-streamer
  template:
    metadata:
      labels:
        app: ai-streamer
    spec:
      containers:
      - name: ai-streamer           # (Matches CONTAINER_NAME in your workflows)
        image: 038462756156.dkr.ecr.us-east-1.amazonaws.com/ai-streamer:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000       # The port your Flask app listens on
        resources:
          requests:
            cpu: "500m"
            memory: "4Gi"           # Good baseline for memory-intensive apps
          limits:
            cpu: "1"
            memory: "8Gi"
        livenessProbe:
          httpGet:
            path: /health           # Ensure your app provides a /health endpoint
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 5

---
# ---------------------------------------
# Service: Expose Application with a Static IP
# ---------------------------------------
apiVersion: v1
kind: Service
metadata:
  name: ai-streamer-service
  namespace: default
  labels:
    app: ai-streamer
  annotations:
    # Use an NLB so that you can assign a static Elastic IP
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    # Replace the placeholder below with your Elastic IP allocation ID (not the IP address)
    service.beta.kubernetes.io/aws-load-balancer-eip-allocations: "eipalloc-0195006ff85a2aa7b"
spec:
  type: LoadBalancer
  ports:
  - port: 80                      # External port (adjust as needed)
    targetPort: 5000              # Container port (your Flask app)
    protocol: TCP
  selector:
    app: ai-streamer

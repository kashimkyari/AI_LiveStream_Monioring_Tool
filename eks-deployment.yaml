# ---------------- Backend Deployment & Service ----------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stream-monitor-backend
  labels:
    app: stream-monitor-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: stream-monitor-backend
  template:
    metadata:
      labels:
        app: stream-monitor-backend
    spec:
      containers:
      - name: backend
        image: 038462756156.dkr.ecr.us-east-1.amazonaws.com/stream-monitor-backend:latest
        ports:
        - containerPort: 5000
        env:
        - name: DB_HOST
          value: "stream-monitor-db"
        - name: DB_PORT
          value: "5432"
        - name: DB_USER
          value: "postgres"
        - name: DB_PASSWORD
          value: "password"
        - name: NEW_DB_NAME
          value: "stream_monitor"
        - name: TELEGRAM_TOKEN
          value: "8175749575:AAGWrWMrqzQkDP8bkKe3gafC42r_Ridr0gY"
---
apiVersion: v1
kind: Service
metadata:
  name: stream-monitor-backend
spec:
  selector:
    app: stream-monitor-backend
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
---
# ---------------- Frontend Deployment & Service ----------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stream-monitor-frontend
  labels:
    app: stream-monitor-frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: stream-monitor-frontend
  template:
    metadata:
      labels:
        app: stream-monitor-frontend
    spec:
      containers:
      - name: frontend
        image: 038462756156.dkr.ecr.us-east-1.amazonaws.com/stream-monitor-frontend:latest
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: stream-monitor-frontend
  annotations:
    # Force the creation of an external LoadBalancer (public)
    service.beta.kubernetes.io/aws-load-balancer-internal: "false"
    service.beta.kubernetes.io/aws-load-balancer-eip-allocations: "eipalloc-0c9c8301d6b810805"   # Associates the given Elastic IP
    service.beta.kubernetes.io/aws-load-balancer-security-groups: "sg-033319018a0786188"         # Applies the specified security group
spec:
  type: LoadBalancer
  selector:
    app: stream-monitor-frontend
  ports:
  - protocol: TCP
    port: 3000          # Expose on port 3000 externally
    targetPort: 80      # Container continues to listen on port 80
---
# ---------------- Database (PostgreSQL) Deployment, PVC, and Service ----------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stream-monitor-db
  labels:
    app: stream-monitor-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stream-monitor-db
  template:
    metadata:
      labels:
        app: stream-monitor-db
    spec:
      containers:
      - name: postgres
        image: postgres:13
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          value: "password"
        - name: POSTGRES_DB
          value: "stream_monitor"
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  storageClassName: gp2  # Ensures dynamic provisioning on EKS
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: stream-monitor-db
spec:
  selector:
    app: stream-monitor-db
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432

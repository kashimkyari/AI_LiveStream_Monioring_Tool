# -------------------------------
# Deployment: AI Streamer Application
# -------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-streamer-deployment      # This should match your GitHub secret EKS_DEPLOYMENT if used in automation
  namespace: default                # Use your desired namespace (set as EKS_NAMESPACE if using secrets)
  labels:
    app: ai-streamer
spec:
  replicas: 3                       # Adjust the number of replicas as needed
  selector:
    matchLabels:
      app: ai-streamer
  template:
    metadata:
      labels:
        app: ai-streamer
    spec:
      containers:
      - name: ai-streamer           # This should match your GitHub secret CONTAINER_NAME if used in automation
        image: 038462756156.dkr.ecr.us-east-1.amazonaws.com/ai-streamer:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000       # The port your Flask app listens on
        resources:
          requests:
            cpu: "500m"
            memory: "4Gi"           # Request a good amount of memory for your heavy app
          limits:
            cpu: "1"
            memory: "8Gi"           # Set higher limits to ensure stability under load
        livenessProbe:
          httpGet:
            path: /health           # Ensure your app exposes a /health endpoint for this probe
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 5

---
# -------------------------------
# Service: Publicly Expose the Application
# -------------------------------
apiVersion: v1
kind: Service
metadata:
  name: ai-streamer-service
  namespace: default
  labels:
    app: ai-streamer
spec:
  type: LoadBalancer              # Exposes the service publicly
  ports:
  - port: 80                      # External port (can be adjusted or used with an Ingress)
    targetPort: 5000              # Internal container port
    protocol: TCP
  selector:
    app: ai-streamer

---
# -------------------------------
# Horizontal Pod Autoscaler (Optional)
# -------------------------------
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ai-streamer-hpa
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ai-streamer-deployment
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
